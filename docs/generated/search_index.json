[
  {"file": "generated\\API_REFERENCE.md", "title": "WDBX-AI API Reference", "excerpt": "Main database interface for vector operations. Initialize a new database instance. **Parameters:** - allocator: Memory allocator to use - config: Database configuration **Returns:** Initialized database instance **Errors:** DatabaseError.OutOfMemory, DatabaseError.InvalidConfig Insert a vector into "},
  {"file": "generated\\CODE_API_INDEX.md", "title": "Code API Index (Scanned)", "excerpt": "Scanned 45 Zig files under src/. This index lists public declarations discovered along with leading doc comments. - type GpuBackendConfig Configuration for the GPU backend. - type GpuBackend Main context for GPU-accelerated operations. - const Error Error set for all GPU backend operations. - fn ini"},
  {"file": "generated\\DEFINITIONS_REFERENCE.md", "title": "WDBX-AI Definitions Reference", "excerpt": "A specialized database designed to store, index, and search high-dimensional vectors efficiently. Unlike traditional databases that store scalar values, vector databases are optimized for similarity search operations using metrics like cosine similarity, Euclidean distance, or dot product. **Key cha"},
  {"file": "generated\\EXAMPLES.md", "title": "WDBX-AI Usage Examples", "excerpt": ""},
  {"file": "generated\\MODULE_REFERENCE.md", "title": "WDBX-AI Module Reference", "excerpt": "The primary module containing all core functionality. - **Database Engine**: High-performance vector database with HNSW indexing - **AI System**: Neural networks and machine learning capabilities - **SIMD Operations**: Optimized vector operations - **Plugin System**: Extensible architecture for cust"},
  {"file": "generated\\PERFORMANCE_GUIDE.md", "title": "WDBX-AI Performance Guide", "excerpt": "- **Optimal range**: 128-512 dimensions - **Too small**: Poor representation quality - **Too large**: Increased memory and computation - **Database inserts**: 100-1000 vectors per batch - **Neural training**: 32-128 samples per batch - **SIMD operations**: 1024-4096 elements per batch - **Use arena "}
]
