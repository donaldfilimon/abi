apiVersion: apps/v1
kind: Deployment
metadata:
  name: abi-ai-framework
  namespace: ai-production
  labels:
    app: abi-ai-framework
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: abi-ai-framework
  template:
    metadata:
      labels:
        app: abi-ai-framework
        version: v1.0.0
    spec:
      containers:
      - name: abi-server
        image: abi-framework:latest
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        env:
        - name: ABI_CONFIG_FILE
          value: "/app/config/production.wdbx-config"
        - name: ABI_PORT
          value: "8080"
        - name: ABI_HOST
          value: "0.0.0.0"
        - name: ABI_DATABASE_PATH
          value: "/app/data/vectors.wdbx"
        - name: ABI_LOG_LEVEL
          value: "info"
        - name: ABI_ENABLE_GPU
          value: "true"
        - name: ABI_ENABLE_SIMD
          value: "true"
        - name: ABI_WORKER_THREADS
          value: "16"
        - name: ABI_MEMORY_LIMIT_MB
          value: "4096"
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: models-volume
          mountPath: /app/models
        - name: logs-volume
          mountPath: /app/logs
        - name: config-volume
          mountPath: /app/config
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: abi-data-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: abi-models-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: abi-logs-pvc
      - name: config-volume
        configMap:
          name: abi-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - abi-ai-framework
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      nodeSelector:
        accelerator: nvidia-tesla-k80

---
apiVersion: v1
kind: Service
metadata:
  name: abi-service
  namespace: ai-production
  labels:
    app: abi-ai-framework
spec:
  selector:
    app: abi-ai-framework
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
  type: LoadBalancer
  sessionAffinity: None

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: abi-config
  namespace: ai-production
data:
  production.wdbx-config: |
    {
      "database": {
        "path": "/app/data/vectors.wdbx",
        "dimensions": 1536,
        "hnsw_m": 32,
        "hnsw_ef_construction": 400,
        "hnsw_ef_search": 100,
        "memory_map_size": "4GB",
        "wal_enabled": true,
        "checkpoint_interval_ms": 300000,
        "enable_sharding": true,
        "shard_count": 8,
        "enable_compression": true,
        "compression_algorithm": "lz4"
      },
      "server": {
        "host": "0.0.0.0",
        "port": 8080,
        "max_connections": 10000,
        "max_request_size": "50MB",
        "request_timeout_ms": 60000,
        "enable_cors": true,
        "enable_auth": true,
        "jwt_secret": "${ABI_JWT_SECRET}",
        "max_batch_size": 1000,
        "batch_timeout_ms": 10000,
        "default_page_size": 50,
        "max_page_size": 10000,
        "enable_windows_optimizations": false,
        "socket_keepalive": true,
        "tcp_nodelay": true,
        "socket_buffer_size": 65536
      },
      "performance": {
        "worker_threads": 16,
        "memory_limit_mb": 4096,
        "gc_interval_ms": 60000,
        "enable_simd": true,
        "simd_alignment": 64,
        "enable_profiling": true,
        "profile_interval_ms": 5000,
        "query_cache_size": 10000,
        "result_cache_ttl_ms": 300000
      }
    }

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: abi-data-pvc
  namespace: ai-production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: abi-models-pvc
  namespace: ai-production
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: abi-logs-pvc
  namespace: ai-production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
